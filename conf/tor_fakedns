#!/usr/bin/perl

# TorFilter app for YunoHost 
# Copyright (C) 2015 Emile morel <emile@bleuchtang.fr>
# Copyright (C) 2015 Julien Vaubourg <julien@vaubourg.com>
# Contribute at https://github.com/labriqueinternet/torfilter_ynh
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
use strict;
use warnings;
use Net::DNS::Nameserver;

my $ip4_addr = shift @ARGV;
 
sub reply_handler {
  my ($qname, $qclass, $qtype, $peerhost,$query,$conn) = @_;
  my ($rcode, @ans, @auth, @add);
 
  if ($qtype eq "A" && $qname eq "www.torproject.org" ) {
      my ($ttl, $rdata) = (3600, "82.195.75.101");
      my $rr = new Net::DNS::RR("$qname $ttl $qclass $qtype $rdata");
      push @ans, $rr;
      $rcode = "NOERROR";
  } elsif ($qtype eq "A" && $qname eq "dist.torproject.org" ) {
      my ($ttl, $rdata) = (3600, "154.35.132.70");
      my $rr = new Net::DNS::RR("$qname $ttl $qclass $qtype $rdata");
      push @ans, $rr;
      $rcode = "NOERROR";
  } elsif($qtype eq "A") {
      my ($ttl, $rdata) = (1, $ip4_addr);
      my $rr = new Net::DNS::RR("$qname $ttl $qclass $qtype $rdata");
      push @ans, $rr;
      $rcode = "NOERROR";

  } else {
      $rcode = "NXDOMAIN";
  }
 
  return ($rcode, \@ans, \@auth, \@add, { aa => 1 });
}
 
my $ns = new Net::DNS::Nameserver(
  LocalPort    => 4353,
  LocalAddr    => $ip4_addr,
  ReplyHandler => \&reply_handler,
  Verbose      => 0
  ) || die "Couldn't create fake nameserver object.\n";
 
$ns->main_loop;

exit 0;
